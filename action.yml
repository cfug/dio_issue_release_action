name: 'dio-release'
description: 'For release cfug/dio'
author: 'CaiJingLong'
inputs:
  github-token:
    description: 'The GitHub token to use for the action'
    required: true
  pub-credentials-json:
    description: 'The pub credentials json'
    required: true
  dry-run:
    description: 'Default is false, set to true will not publish to pub.dev, just run pub publish --dry-run'
    required: false
    default: 'false'
runs:
  using: composite
  steps:
    - uses: actions/setup-node@v3
      with:
        node-version: '16'
    - shell: bash
      id: 'check_package_type'
      name: 'Check package is flutter or dart'
      env:
        GITHUB_TOKEN: ${{inputs.github-token}}
        PUB_JSON: ${{inputs.pub-credentials-json}}
        DRY_RUN: ${{inputs.dry-run}}
      run: |
        node ${{github.action_path}}/dist/install/index.js
    - uses: dart-lang/setup-dart@v1
      name: 'Install Dart'
      if: steps.check_package_type.outputs.IS_FLUTTER != 1
      with:
        sdk: 'stable'
    - uses: subosito/flutter-action@v2
      name: 'Install Flutter'
      if: steps.check_package_type.outputs.IS_FLUTTER == 1
      with:
        channel: 'stable'
    - shell: bash
      name: 'show the dart or flutter install path'
      run: |
        echo "dart: $(which dart)"
        echo "flutter: $(which flutter)"
    - shell: bash
      name: 'Release ${{steps.check_package_type.outputs.RELEASE_TAG}} and publish to pub.dev'
      run: |
        node ${{github.action_path}}/dist/index.js
      env:
        GITHUB_TOKEN: ${{inputs.github-token}}
        PUB_JSON: ${{inputs.pub-credentials-json}}
        DRY_RUN: ${{inputs.dry-run}}
    - uses: k-paxian/dart-package-publisher@v1.5.1
      with:
        credentialJson: ${{ inputs.pub-credentials-json }}
        flutter: {{steps.check_package_type.outputs.IS_FLUTTER == 1}}
        skipTests: true
        dryRunOnly: ${{ inputs.dry-run }}
        relativePath: ${{ steps.check_package_type.outputs.PACKAGE_SUBPATH }}
